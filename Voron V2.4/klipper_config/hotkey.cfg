

#####################################
#           INSTRUCTIONS            #
#####################################
# 
# The Voron Hotkey board commes pre-flashed. So you don´t have to compile and upload any firmware to the board.
#
# How to use all this stuff:
#
#     1.  Copy this .cfg file into your Klipper config directory and then add [include Hotkey.cfg]
#         to the top of your printer.cfg in order to register the MCU, LEDs and macros with Klipper.
#
#     2.  If you installed the Stealthburner as well and want to get the "STATUS_ERROR" state transmitted to the hotkey button PCB,
#         you have to replace the "STATUS_ERROR" Macro in your stealthburner_leds.cfg with this without the "#":
#
#[gcode_macro status_error]
#gcode:
#    STATUS_ERROR_HOTKEY
#    _set_sb_leds_by_name leds="logo" color="error" transmit=0
#    _set_sb_leds_by_name leds="nozzle" color="error" transmit=1
#
#     3.  Connect the PCB via USB to your RaspberryPi and SSH to your Pi
#
#     4.  Get the Serial ID of the PCB with "ls /dev/serial/by-id/*". Usualy it´s like usb-Klipper_rp2040_xxx
#
#     5.  Replace the serial under the [mcu hotkey] section with your id
#
#     6.  Save your config and restart Klipper.
#



#####################################
#           User Config             #
#####################################

#1  Daylight button
#2  Set speed button
#3  Nothing yet button
#4  Extrude 50mm button
#5  Preheat button
#6  Home all button
#7  Led on/off button
#8  Resume button
#9  Pause button
#10 Service button
#11 Clean nozzle button
#12 Cancel print button

[mcu hotkey]
serial: /dev/serial/by-id/usb-Klipper_rp2040_E6625C4893596A33-if00
restart_method: command

#[idle_timeout]
#gcode:
#  status_standby_hotkey
#timeout: 1800

#####################################
#           Macro Config            #
#####################################

# All of the buttons are configured with macros.
# Some of them are self-made, like the PREHEAT and CLEAN_NOZZLE and will not work at the beginning.
# In order to get them work, you have to define them in your config.
# Please refer to https://www.klipper3d.org/Config_Reference.html?h=macro#g-code-macros-and-events


[gcode_macro _BUTTON_B1]
#1  Daylight button
gcode:
  {% if printer["output_pin daylight"].value == 0 %}
  _status_button_busy BUTTON=1
  SET_PIN PIN=daylight VALUE=1
  M118 Daylight on
  {% else %}
  _status_button_ready BUTTON=1
  SET_PIN PIN=daylight VALUE=0
  M118 Daylight off
  {% endif %}

[output_pin daylight]
pin: PB15
value: 0

[gcode_macro _BUTTON_B2]
#2  Preheat button
variable_toggle: 0
gcode:
    {% if printer.print_stats.state == "printing" %}
        # Nothing
    {% endif %}
    {% if toggle == 0 and printer.print_stats.state != "printing" %}
        NEOPIXEL_DISPLAY LED=hotkey_leds TYPE=bed_temp MODE=glow
        SET_GCODE_VARIABLE MACRO=_BUTTON_B2 VARIABLE=toggle VALUE=1
        CARTOGRAPHER_MODEL_SELECT NAME=ABS
        M118 Bed heater 110c
        SET_HEATER_TEMPERATURE HEATER=extruder TARGET=150
        SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=110
        SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=Raspberry_Pi_temp TARGET=50
        _status_button_ready BUTTON=2
    {% elif toggle == 1 and printer.print_stats.state != "printing" %}
        SET_GCODE_VARIABLE MACRO=_BUTTON_B2 VARIABLE=toggle VALUE=2
        CARTOGRAPHER_MODEL_SELECT NAME=PLA
        M118 Bed heater 60c
        SET_HEATER_TEMPERATURE HEATER=extruder TARGET=150
        SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=60
        SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=Raspberry_Pi_temp TARGET=50
        _status_button_standby BUTTON=2
        NEOPIXEL_DISPLAY LED=hotkey_leds TYPE=bed_temp MODE=glow
    {% elif printer.print_stats.state != "printing" %}
        CARTOGRAPHER_MODEL_SELECT NAME=default
        SET_LED_TEMPLATE LED=hotkey_leds TEMPLATE=""
        SET_GCODE_VARIABLE MACRO=_BUTTON_B2 VARIABLE=toggle VALUE=0
        M118 Heaters off
        TURN_OFF_HEATERS
        SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=Raspberry_Pi_temp TARGET=60
        _status_button_ready BUTTON=7
        _status_button_busy BUTTON=2
    {% endif %}

[gcode_macro _BUTTON_B3]
#3  Nothing yet button
gcode:
    # reserve

[gcode_macro _BUTTON_B4]
#4  Extrude 50mm button
gcode:
    {% set ACTUAL_TEMP_2 = printer.extruder.temperature %}
    {% if ACTUAL_TEMP_2 < 190 and printer.print_stats.state != "printing" %}
        _status_button_error BUTTON=4
        M118 Error: Temperature below minimum 190c
        G4 P1000
        _status_button_ready BUTTON=4
    {% elif printer.print_stats.state != "printing" %}
        _status_button_busy BUTTON=4
        M118 Extruding 50mm
        M83
        G1 E50 F600
        _status_button_ready BUTTON=4
    {% endif %}
    
    {% if printer.print_stats.state == "printing" %}
        _status_button_standby BUTTON=4
    {% endif %}
    

[gcode_macro _BUTTON_B5]
#5  Set speed macro
variable_toggle: 0
gcode:
    {% if toggle == 0 %}
       _status_button_standby BUTTON=5
        M118 Speed 100%
        M220 S100
        SET_GCODE_VARIABLE MACRO=_BUTTON_B5 VARIABLE=toggle VALUE=1
    {% elif toggle == 1 %}        
        _status_button_busy BUTTON=5
        M118 Speed 75%
        M220 S75
        SET_GCODE_VARIABLE MACRO=_BUTTON_B5 VARIABLE=toggle VALUE=2
    {% else %}
        _status_button_ready BUTTON=5
        M118 Speed 125%
        M220 S125
        SET_GCODE_VARIABLE MACRO=_BUTTON_B5 VARIABLE=toggle VALUE=0
    {% endif %}

[gcode_macro _BUTTON_B6]
#6  Home all button
gcode:
    {% if printer.print_stats.state == "printing" %}
        _status_button_standby BUTTON=6
    {% elif printer.print_stats.state != "printing" %}
        _status_button_busy BUTTON=6
        G28
        _status_button_ready BUTTON=6
    {% endif %}

[gcode_macro _BUTTON_B7]
#7  Led on/off button
variable_toggle: 0
gcode:
    {% if toggle == 0 %}
        LED_OFF
        SET_GCODE_VARIABLE MACRO=_BUTTON_B7 VARIABLE=toggle VALUE=1
        M118 All lights off
    {% else %}
        LED_ON
        SET_GCODE_VARIABLE MACRO=_BUTTON_B7 VARIABLE=toggle VALUE=0
        M118 All lights on
    {% endif %}

[gcode_macro _BUTTON_B8]
#8  Resume button
gcode:
    {% if printer.print_stats.state == "printing" %}
        _status_button_standby BUTTON=8
    {% elif printer.print_stats.state != "printing" %}
        _status_button_busy BUTTON=8
        M118 Resuming print
        RESUME
    {% endif %}


[gcode_macro _BUTTON_B9]
#9  Pause button
gcode:
    {% if printer.print_stats.state == "printing" %}
        _status_button_busy BUTTON=9
        M118 Print pause
        PAUSE
    {% elif printer.print_stats.state != "printing" %}
        _status_button_standby BUTTON=9
    {% endif %}

[gcode_macro _BUTTON_B10]
#10 Service button
variable_toggle: 0
gcode:
    {% if printer.print_stats.state == "printing" %}
        _status_button_standby BUTTON=10
    {% endif %}
    # Smart homing check
    {% if printer.toolhead.homed_axes != "xyz" and printer.print_stats.state != "printing" %}
        G28  ; Home the printer if not already homed in all axes
    {% endif %}

    # Actions based on toggle state
    {% if toggle == 0 and printer.print_stats.state != "printing" %}
        # Saves the current position, sets the extruder temp to 170 C and moves to the front
        M118 Service position
        _status_button_busy BUTTON=10
        SAVE_GCODE_STATE NAME=SERVICE
        G90
        G1 X270 Y20 Z170 F100000
        M104 S170  ; Set extruder temperature to 170C
        SET_GCODE_VARIABLE MACRO=_BUTTON_B10 VARIABLE=toggle VALUE=1
    {% elif printer.print_stats.state != "printing" %}
        # Turns of the heater and moves back to the saved position
        _status_button_ready BUTTON=10
        RESTORE_GCODE_STATE NAME=SERVICE MOVE=1 MOVE_SPEED=200                          
        M104 S0  ; Set extruder temperature to 0C
        SET_GCODE_VARIABLE MACRO=_BUTTON_B10 VARIABLE=toggle VALUE=0
    {% endif %}



[gcode_macro _BUTTON_B11]
#11 Clean nozzle button
gcode:
    {% if printer.print_stats.state == "printing" %}
        _status_button_standby BUTTON=11
    {% elif printer.print_stats.state != "printing" %}
        M118 Nozzle cleaning
        _status_button_busy BUTTON=11
        CLEAN_NOZZLE
        _status_button_ready BUTTON=11
    {% endif %}


[gcode_macro _BUTTON_B12]
#12 Cancel print button
gcode:
    {% if printer.print_stats.state == "printing" %}
        _status_button_busy BUTTON=12
        M118 Canceling print
        CANCEL_PRINT
    {% elif printer.print_stats.state != "printing" %}
        _status_button_standby BUTTON=12
    {% endif %}


# Config for the hotkey button LEDs
[neopixel hotkey_leds]
pin: hotkey: gpio29
chain_count: 24
color_order: GRB
#initial_RED: 0.05
#initial_GREEN: 0.0
#initial_BLUE: 0.0

# Settings for the Buttons
[gcode_button b1]
pin: ^!hotkey: gpio2
press_gcode: _BUTTON_B1

[gcode_button b2]
pin: ^!hotkey: gpio3
press_gcode: _BUTTON_B2

[gcode_button b3]
pin: ^!hotkey: gpio4
press_gcode: _BUTTON_B3

[gcode_button b4]
pin: ^!hotkey: gpio5
press_gcode: _BUTTON_B4

[gcode_button b5]
pin: ^!hotkey: gpio6
press_gcode: _BUTTON_B5

[gcode_button b6]
pin: ^!hotkey: gpio7
press_gcode: _BUTTON_B6

[gcode_button b7]
pin: ^!hotkey: gpio8
press_gcode: _BUTTON_B7

[gcode_button b8]
pin: ^!hotkey: gpio9
press_gcode: _BUTTON_B8

[gcode_button b9]
pin: ^!hotkey: gpio10
press_gcode: _BUTTON_B9

[gcode_button b10]
pin: ^!hotkey: gpio11
press_gcode: _BUTTON_B10

[gcode_button b11]
pin: ^!hotkey: gpio12
press_gcode: _BUTTON_B11

[gcode_button b12]
pin: ^!hotkey: gpio13
press_gcode: _BUTTON_B12

#####################################
#           Color Config            #
#####################################

[gcode_macro _hotkey_vars]
# User settings for the hotkey Button status leds. You can change the status colors and led
# configurations for all 12 buttons here.
variable_colors: {
        'b1': { # Colors for b1 states
            'busy': {'r': 0.0, 'g': 0.1, 'b': 0.0,},
            'standby': {'r': 0.1, 'g': 0.0, 'b': 0.1,},
            'ready': {'r': 0.1, 'g': 0.1, 'b': 0.1,},
            'error': {'r': 0.0, 'g': 0.2, 'b': 0.0},
            'printing': {'r': 0.0, 'g': 0.0, 'b': 0.0},
        },
        'b2': { # Colors for b2 states
            'busy': {'r': 0.0, 'g': 0.0, 'b': 0.1,},
            'standby': {'r': 0.1, 'g': 0.02, 'b': 0.0,},
            'ready': {'r': 0.1, 'g': 0.0, 'b': 0.0,},
            'error': {'r': 0.2, 'g': 0.0, 'b': 0.0},
            'printing': {'r': 0.0, 'g': 0.0, 'b': 0.0},
        },
        'b3': { # Colors for b3 states 
            'busy': {'r': 0.0, 'g': 0.2, 'b': 0.0,},
            'standby': {'r': 0.1, 'g': 0.0, 'b': 0.1,},
            'ready': {'r': 0.2, 'g': 0.2, 'b': 0.2,},
            'error': {'r': 0.0, 'g': 0.2, 'b': 0.0},
            'printing': {'r': 0.0, 'g': 0.0, 'b': 0.0},
        },
        'b4': { # Colors for b4 states
            'busy': {'r': 0.0, 'g': 0.0, 'b': 0.1,},
            'standby': {'r': 0.0, 'g': 0.0, 'b': 0.0,},
            'ready': {'r': 0.1, 'g': 0.1, 'b': 0.1,},
            'error': {'r': 0.1, 'g': 0.0, 'b': 0.0},
            'printing': {'r': 0.0, 'g': 0.0, 'b': 0.0},
        },
        'b5': { # Colors for b5 states
            'busy': {'r': 0.1, 'g': 0.1, 'b': 0.0,},
            'standby': {'r': 0.0, 'g': 0.1, 'b': 0.0,},
            'ready': {'r': 0.1, 'g': 0.0, 'b': 0.0,},
            'error': {'r': 0.1, 'g': 0.0, 'b': 0.0},
            'printing': {'r': 0.0, 'g': 0.0, 'b': 0.0},
        },
        'b6': { # Colors for b6 states
            'busy': {'r': 0.0, 'g': 0.0, 'b': 0.1,},
            'standby': {'r': 0.0, 'g': 0.0, 'b': 0.0,},
            'ready': {'r': 0.1, 'g': 0.1, 'b': 0.1,},
            'error': {'r': 0.1, 'g': 0.0, 'b': 0.0},
            'printing': {'r': 0.0, 'g': 0.0, 'b': 0.0},
        },
        'b7': { # Colors for b7 states
            'busy': {'r': 0.0, 'g': 0.0, 'b': 0.1,},
            'standby': {'r': 0.03, 'g': 0.0, 'b': 0.0,},
            'ready': {'r': 0.1, 'g': 0.0, 'b': 0.0,},
            'error': {'r': 0.0, 'g': 0.1, 'b': 0.0},
            'printing': {'r': 0.0, 'g': 0.0, 'b': 0.0},
        },
        'b8': { # Colors for b4 states
            'busy': {'r': 0.0, 'g': 0.0, 'b': 0.1,},
            'standby': {'r': 0.0, 'g': 0.0, 'b': 0.0,},
            'ready': {'r': 0.0, 'g': 0.1, 'b': 0.0,},
            'error': {'r': 0.1, 'g': 0.0, 'b': 0.0},
            'printing': {'r': 0.0, 'g': 0.0, 'b': 0.0},
        },
        'b9': { # Colors for b5 states
            'busy': {'r': 0.0, 'g': 0.0, 'b': 0.1,},
            'standby': {'r': 0.0, 'g': 0.0, 'b': 0.0,},
            'ready': {'r': 0.1, 'g': 0.1, 'b': 0.0,},
            'error': {'r': 0.1, 'g': 0.0, 'b': 0.0},
            'printing': {'r': 0.0, 'g': 0.0, 'b': 0.0},
        },
        'b10': { # Colors for b6 states
            'busy': {'r': 0.0, 'g': 0.0, 'b': 0.1,},
            'standby': {'r': 0.0, 'g': 0.0, 'b': 0.0,},
            'ready': {'r': 0.1, 'g': 0.0, 'b': 0.0,},
            'error': {'r': 0.1, 'g': 0.0, 'b': 0.0},
            'printing': {'r': 0.0, 'g': 0.0, 'b': 0.0},
        },
        'b11': { # Colors for b7 states
            'busy': {'r': 0.0, 'g': 0.0, 'b': 0.1,},
            'standby': {'r': 0.0, 'g': 0.0, 'b': 0.0,},
            'ready': {'r': 0.1, 'g': 0.1, 'b': 0.1,},
            'error': {'r': 0.1, 'g': 0.0, 'b': 0.0},
            'printing': {'r': 0.0, 'g': 0.0, 'b': 0.0},
        },
        'b12': { # Colors for b7 states
            'busy': {'r': 0.0, 'g': 0.0, 'b': 0.1,},
            'standby': {'r': 0.0, 'g': 0.0, 'b': 0.0,},
            'ready': {'r': 0.1, 'g': 0.0, 'b': 0.0,},
            'error': {'r': 0.1, 'g': 0.0, 'b': 0.0},
            'printing': {'r': 0.0, 'g': 0.0, 'b': 0.0},  
        },
    }
variable_b1_led_name:         "hotkey_leds" 
variable_b1_idx:              "1,2" 
variable_b2_led_name:         "hotkey_leds" 
variable_b2_idx:              "3,4" 
variable_b3_led_name:         "hotkey_leds" 
variable_b3_idx:              "5,6" 
variable_b4_led_name:         "hotkey_leds" 
variable_b4_idx:              "7,8" 
variable_b5_led_name:         "hotkey_leds" 
variable_b5_idx:              "9,10" 
variable_b6_led_name:         "hotkey_leds" 
variable_b6_idx:              "11,12" 
variable_b7_led_name:         "hotkey_leds" 
variable_b7_idx:              "13,14" 
variable_b8_led_name:         "hotkey_leds" 
variable_b8_idx:              "15,16" 
variable_b9_led_name:         "hotkey_leds" 
variable_b9_idx:              "17,18" 
variable_b10_led_name:        "hotkey_leds" 
variable_b10_idx:             "19,20" 
variable_b11_led_name:        "hotkey_leds" 
variable_b11_idx:             "21,22" 
variable_b12_led_name:        "hotkey_leds" 
variable_b12_idx:             "23,24" 


#####################################
#     Custom Neopixel Gcode         #
#####################################


gcode:
    # This section is required.  Do Not Delete.
    # Don't change anything unless you know what you are doing 

[gcode_macro _set_hotkey_leds]
gcode:
    {% set red = params.RED|default(0)|float %}
    {% set green = params.GREEN|default(0)|float %}
    {% set blue = params.BLUE|default(0)|float %}
    {% set white = params.WHITE|default(0)|float %}
    {% set led = params.LED|string %}
    {% set idx = (params.IDX|string).split(',') %}
    {% set transmit_last = params.TRANSMIT|default(1) %}

    {% for led_index in idx %}
        {% set transmit=transmit_last if loop.last else 0 %}
        set_led led={led} red={red} green={green} blue={blue} white={white} index={led_index} transmit={transmit}
    {% endfor %}

[gcode_macro _set_hotkey_leds_by_name]
gcode:
    {% set leds_name = params.LEDS %}
    {% set color_name = params.COLOR %}
    {% set color = printer["gcode_macro _hotkey_vars"].colors[leds_name][color_name] %}
    {% set led = printer["gcode_macro _hotkey_vars"][leds_name + "_led_name"] %}
    {% set idx = printer["gcode_macro _hotkey_vars"][leds_name + "_idx"] %}
    {% set transmit = params.TRANSMIT|default(1) %}

    _set_hotkey_leds led={led} red={color.r} green={color.g} blue={color.b} white={color.w} idx="{idx}" transmit={transmit}

[gcode_macro _set_b1_leds]
gcode:
    {% set red = params.RED|default(0)|float %}
    {% set green = params.GREEN|default(0)|float %}
    {% set blue = params.BLUE|default(0)|float %}
    {% set white = params.WHITE|default(0)|float %}
    {% set led = printer["gcode_macro _hotkey_vars"].b1_led_name %}
    {% set idx = printer["gcode_macro _hotkey_vars"].b1_idx %}
    {% set transmit=params.TRANSMIT|default(1) %}

    _set_hotkey_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}

[gcode_macro _set_b2_leds]
gcode:
    {% set red = params.RED|default(0)|float %}
    {% set green = params.GREEN|default(0)|float %}
    {% set blue = params.BLUE|default(0)|float %}
    {% set white = params.WHITE|default(0)|float %}
    {% set led = printer["gcode_macro _hotkey_vars"].b2_led_name %}
    {% set idx = printer["gcode_macro _hotkey_vars"].b2_idx %}
    {% set transmit=params.TRANSMIT|default(1) %}

    _set_hotkey_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}

[gcode_macro _status_button_busy]
gcode:
  {% set button = params.BUTTON %}
    _set_hotkey_leds_by_name leds="b{button}" color="busy" transmit=1


[gcode_macro _status_button_standby]
gcode:
  {% set button = params.BUTTON %}
    _set_hotkey_leds_by_name leds="b{button}" color="standby" transmit=1

[gcode_macro _status_button_ready]
gcode:
  {% set button = params.BUTTON %}
    _set_hotkey_leds_by_name leds="b{button}" color="ready" transmit=1

[gcode_macro _status_button_error]
gcode:
  {% set button = params.BUTTON %}
    _set_hotkey_leds_by_name leds="b{button}" color="error" transmit=1

[gcode_macro status_printing_hotkey]
gcode:
    {% set num_buttons = 7 %}
    {% set transmit = 0 %}
    {% for button_index in range(num_buttons + 1) %}
        {% set transmit = 1 if loop.last else 0 %}
        {% if button_index > 0 %}
          _set_hotkey_leds_by_name leds="b{button_index}" color="printing" transmit={transmit}
        {% endif %}
    {% endfor %}

[gcode_macro status_error_hotkey]
gcode:
    {% set num_buttons = 7 %}
    {% set transmit = 0 %}
    {% for button_index in range(num_buttons + 1) %}
        {% set transmit = 1 if loop.last else 0 %}
        {% if button_index > 0 %}
          _set_hotkey_leds_by_name leds="b{button_index}" color="error" transmit={transmit}
        {% endif %}
    {% endfor %}

[gcode_macro status_standby_hotkey]
gcode:
    {% set num_buttons = 7 %}
    {% set transmit = 0 %}
    {% for button_index in range(num_buttons + 1) %}
        {% set transmit = 1 if loop.last else 0 %}
        {% if button_index > 0 %}
          _set_hotkey_leds_by_name leds="b{button_index}" color="standby" transmit={transmit}
        {% endif %}
    {% endfor %}


[gcode_macro M301]
gcode:
  {% set tones = [1000, 1500, 2000, 2500, 3000, 2500, 2000, 1500, 1000] %} ; S sets the tone frequency
  {% for count in tones %}
  {% set cytime = 1 / count %}
  SET_PIN PIN=beeper VALUE={0.5} CYCLE_TIME={cytime} ;Play tone
  G4 P50 ;tone duration
  SET_PIN PIN=beeper VALUE=0
  {% endfor %}
